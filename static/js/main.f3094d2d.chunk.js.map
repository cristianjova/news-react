{"version":3,"sources":["components/layouts/Header.js","components/news/NewsItem.js","components/news/News.js","components/layouts/Browser.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","title","react_default","a","createElement","className","href","NewsItem","newsitem","urlToImage","url","description","source","image","src","alt","style","maxWidth","height","textShadow","name","cardContentLarge","react","target","rel","News","news","map","news_NewsItem","key","Browser","state","category","search","onChange","e","_this","setState","Object","defineProperty","value","props","checkNews","this","type","placeholder","Component","App","_callee","response","_url","_response","_news","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","concat","fetch","sent","json","articles","stop","layouts_Header","layouts_Browser","news_News","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PAqBeA,EAlBA,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAKD,UAAU,qBACpBJ,OCqGEM,EA3GE,SAAAP,GAAkB,IAAfQ,EAAeR,EAAfQ,SAEVC,EAAgDD,EAAhDC,WAAYC,EAAoCF,EAApCE,IAAKT,EAA+BO,EAA/BP,MAAOU,EAAwBH,EAAxBG,YAAaC,EAAWJ,EAAXI,OAGvCC,EAAQJ,EACZP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OACEU,IAAKL,EACLM,IAAKd,EACLe,MAAO,CAAEC,SAAU,OAAQC,OAAQ,WAErChB,EAAAC,EAAAC,cAAA,QACEC,UAAU,wBACVW,MAAO,CAAEG,WAAY,sBAEpBP,EAAOQ,OAGV,KAEEC,EAAmBV,EACvBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAKH,IAEPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAIO,KAIRT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAKH,IAIT,OACEC,EAAAC,EAAAC,cAACkB,EAAA,SAAD,KACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcQ,GAC7BX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAKH,GACLC,EAAAC,EAAAC,cAAA,SAAIO,IAENT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KACEE,KAAMI,EACNa,OAAO,SACPC,IAAI,sBACJnB,UAAU,gCAJZ,4BAYRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZQ,EAEDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAKH,GACLC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAIO,KAIRT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KACEE,KAAMI,EACNa,OAAO,SACPC,IAAI,sBACJnB,UAAU,gCAJZ,2BAYNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZQ,EACAQ,EACDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KACEE,KAAMI,EACNa,OAAO,SACPC,IAAI,sBACJnB,UAAU,gCAJZ,6BC3EGoB,EAZF,SAAAzB,GAAA,IAAG0B,EAAH1B,EAAG0B,KAAH,OACXxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZqB,EAAKC,IAAI,SAAAnB,GAAQ,OAChBN,EAAAC,EAAAC,cAACwB,EAAD,CAAUC,IAAKrB,EAASE,IAAKF,SAAUA,gBCkE9BsB,6MArEbC,MAAQ,CACNC,SAAU,UACVC,OAAQ,MAGVC,SAAW,SAAAC,GAETC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAEKH,EAAEZ,OAAOH,KAAOe,EAAEZ,OAAOiB,OAE5B,WAEEJ,EAAKK,MAAMC,UAAUN,EAAKL,MAAMC,SAAUI,EAAKL,MAAME,mFAMzD,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,iCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAd,iCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAQ8B,SAAUS,KAAKT,SAAUd,KAAK,YACpClB,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,WAAd,WACAtC,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,cAAd,iBACAtC,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,UAAd,YACAtC,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,WAAd,WACAtC,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,iBAAd,mBACAtC,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,YAAd,YACAtC,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,UAAd,YAKNtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,gCAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAd,gCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SACEwC,KAAK,OACLxB,KAAK,SACLyB,YAAY,SACZxC,UAAU,WACV6B,SAAUS,KAAKT,uBAvDXY,aCyDPC,6MAtDbhB,MAAQ,CACNL,KAAM,MAORgB,+BAAY,SAAAM,IAAA,IAAAhB,EAAAC,EAAAvB,EAAAuC,EAAAvB,EAAAwB,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAC,EAAApD,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAO3B,EAAPqB,EAAAO,OAAA,QAAAC,IAAAR,EAAA,GAAAA,EAAA,GAAkB,UACb,MADwBpB,EAA7BoB,EAAAO,OAAA,QAAAC,IAAAR,EAAA,GAAAA,EAAA,GAAsC,IAAtC,CAAAI,EAAAE,KAAA,gBAEFjD,EAFE,4DAAAoD,OAEgE9B,EAFhE,4CAAAyB,EAAAE,KAAA,EAGeI,MAAMrD,GAHrB,cAGFuC,EAHEQ,EAAAO,KAAAP,EAAAE,KAAA,EAIWV,EAASgB,OAJpB,OAIFvC,EAJE+B,EAAAO,KAMR5B,EAAKC,SAAS,CAAEX,KAAMA,EAAKwC,WANnBT,EAAAE,KAAA,wBAQFjD,EARE,uCAAAoD,OAQ2C7B,EAR3C,2EAAAwB,EAAAE,KAAA,GASeI,MAAMrD,GATrB,eASFuC,EATEQ,EAAAO,KAAAP,EAAAE,KAAA,GAUWV,EAASgB,OAVpB,QAUFvC,EAVE+B,EAAAO,KAYR5B,EAAKC,SAAS,CAAEX,KAAMA,EAAKwC,WAZnB,yBAAAT,EAAAU,SAAAnB,yFAHVL,KAAKD,6CAoBL,OACExC,EAAAC,EAAAC,cAACkB,EAAA,SAAD,KACEpB,EAAAC,EAAAC,cAACgE,EAAD,CAAQnE,MAAM,uBAEdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiE,EAAD,CAAS3B,UAAWC,KAAKD,gBAKjCxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACiE,EAAD,CAAS3B,UAAWC,KAAKD,aAG3BxC,EAAAC,EAAAC,cAACkE,EAAD,CAAM5C,KAAMiB,KAAKZ,MAAML,gBAhDfoB,aCOEyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f3094d2d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ title }) => {\n  return (\n    <div className='navbar-fixed '>\n      <nav>\n        <div className='nav-wrapper navbar-color'>\n          <a href='#!' className='brand-logo center'>\n            {title}\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst NewsItem = ({ newsitem }) => {\n  // Extraer los datos\n  const { urlToImage, url, title, description, source } = newsitem;\n\n  // Load image if available\n  const image = urlToImage ? (\n    <div className='card-image'>\n      <img\n        src={urlToImage}\n        alt={title}\n        style={{ maxWidth: '200%', height: '300px' }}\n      />\n      <span\n        className='card-title white-text'\n        style={{ textShadow: '3px 1px 4px black' }}\n      >\n        {source.name}\n      </span>\n    </div>\n  ) : null;\n\n  const cardContentLarge = description ? (\n    <div className='card-content'>\n      <div className='text-content-title'>\n        <h5>{title}</h5>\n      </div>\n      <div className='text-content'>\n        <p>{description}</p>\n      </div>\n    </div>\n  ) : (\n    <div className='card-content'>\n      <h5>{title}</h5>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <div className='col m12 hide-on-small-only hide-on-large-only'>\n        <div className='card horizontal'>\n          <div className='card-image'>{image}</div>\n          <div className='card-stacked'>\n            <div className='card-content'>\n              <h5>{title}</h5>\n              <p>{description}</p>\n            </div>\n            <div className='card-action'>\n              <a\n                href={url}\n                target='_blank'\n                rel='noopener noreferrer'\n                className='waves-effect waves-light btn'\n              >\n                Ver Noticia Completa\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='col s12 hide-on-med-and-up'>\n        <div className='card'>\n          {image}\n\n          <div className='card-content'>\n            <h5>{title}</h5>\n            <div className='text-content'>\n              <p>{description}</p>\n            </div>\n          </div>\n\n          <div className='card-action'>\n            <a\n              href={url}\n              target='_blank'\n              rel='noopener noreferrer'\n              className='waves-effect waves-light btn'\n            >\n              Ver Noticia Completa\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className='col l6 hide-on-med-and-down'>\n        <div className='card hoverable large'>\n          {image}\n          {cardContentLarge}\n          <div className='card-action'>\n            <a\n              href={url}\n              target='_blank'\n              rel='noopener noreferrer'\n              className='waves-effect waves-light btn'\n            >\n              Ver Noticia Completa\n            </a>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nNewsItem.propTypes = {\n  newsitem: PropTypes.object.isRequired\n};\n\nexport default NewsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NewsItem from './NewsItem';\n\nconst News = ({ news }) => (\n  <div className='row'>\n    {news.map(newsitem => (\n      <NewsItem key={newsitem.url} newsitem={newsitem} />\n    ))}\n  </div>\n);\n\nNews.propTypes = {\n  news: PropTypes.array.isRequired\n};\n\nexport default News;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Browser extends Component {\n  state = {\n    category: 'general',\n    search: ''\n  };\n\n  onChange = e => {\n    // Segundo parametro, callback-> funciÃ³n\n    this.setState(\n      {\n        [e.target.name]: e.target.value\n      },\n      () => {\n        // Pasar a la pagina principal\n        this.props.checkNews(this.state.category, this.state.search);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className='browser row'>\n        <div className='col s12'>\n          <form>\n            <div className='col m6'>\n              <h2 className='hide-on-small-only'>Ver Noticias por CategorÃ­a</h2>\n              <h6 className='hide-on-med-and-up center-align'>\n                Ver Noticias por CategorÃ­a\n              </h6>\n              <div className='input-field col s12'>\n                <select onChange={this.onChange} name='category'>\n                  <option value='general'>General</option>\n                  <option value='technology'>TecnologÃ­a</option>\n                  <option value='sports'>Deportes</option>\n                  <option value='science'>Ciencia</option>\n                  <option value='entertainment'>Entretenimiento</option>\n                  <option value='business'>Negocios</option>\n                  <option value='health'>Salud</option>\n                </select>\n              </div>\n            </div>\n\n            <div className='col m6'>\n              <h2 className='hide-on-small-only'>\n                Buscar un tema en especifico\n              </h2>\n              <h6 className='hide-on-med-and-up center-align'>\n                Buscar un tema en especifico\n              </h6>\n              <div className='input-field col s12'>\n                <input\n                  type='text'\n                  name='search'\n                  placeholder='Buscar'\n                  className='validate'\n                  onChange={this.onChange}\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nBrowser.propTypes = {\n  checkNews: PropTypes.func.isRequired\n};\n\nexport default Browser;\n","import React, { Component, Fragment } from 'react';\nimport Header from './components/layouts/Header';\nimport News from './components/news/News';\nimport Browser from './components/layouts/Browser';\n\nclass App extends Component {\n  state = {\n    news: []\n  };\n\n  componentDidMount() {\n    this.checkNews();\n  }\n\n  checkNews = async (category = 'general', search = '') => {\n    if (search === '') {\n      const url = `https://newsapi.org/v2/top-headlines?country=ar&category=${category}&apiKey=cd8df82dc9c94ffa807cebb6882907e8`;\n      const response = await fetch(url);\n      const news = await response.json();\n\n      this.setState({ news: news.articles });\n    } else {\n      const url = `https://newsapi.org/v2/everything?q=${search}&language=es&sortBy=publishedAt&apiKey=cd8df82dc9c94ffa807cebb6882907e8`;\n      const response = await fetch(url);\n      const news = await response.json();\n\n      this.setState({ news: news.articles });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header title='Noticias React API' />\n\n        <div className='container white news-container'>\n          <div className='hide-on-med-and-up'>\n            <ul className='collapsible'>\n              <li>\n                <div className='collapsible-header'>\n                  <i className='fas fa-bars' />\n                  <span>Menu</span>\n                </div>\n                <div className='collapsible-body'>\n                  <Browser checkNews={this.checkNews} />\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div className='hide-on-small-only'>\n            <Browser checkNews={this.checkNews} />\n          </div>\n\n          <News news={this.state.news} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}